{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { TextInput, Button, Colors } from 'react-native-paper';\nimport DatePicker from 'react-native-datepicker';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Info = function Info() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    nom = _useState2[0],\n    setNom = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    prenom = _useState4[0],\n    setPrenom = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    dateNaissance = _useState6[0],\n    setDateNaissance = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    adresse = _useState8[0],\n    setAdresse = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    numerocarte = _useState10[0],\n    setNCarte = _useState10[1];\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.header,\n      children: _jsx(Image, {\n        source: require(\"../assets/logo2.png\"),\n        style: styles.logo,\n        resizeMode: \"contain\"\n      })\n    }), _jsx(View, {\n      style: styles.inputContainer,\n      children: _jsx(TextInput, {\n        label: \"Nom\",\n        value: nom,\n        onChangeText: function onChangeText(text) {\n          return setNom(text);\n        },\n        style: styles.input\n      })\n    }), _jsx(View, {\n      style: styles.inputContainer,\n      children: _jsx(TextInput, {\n        label: \"Pr\\xE9nom\",\n        value: prenom,\n        onChangeText: function onChangeText(text) {\n          return setPrenom(text);\n        },\n        style: styles.input\n      })\n    }), _jsx(View, {\n      style: styles.inputContainer,\n      children: _jsx(TextInput, {\n        label: \"Date de Naissance\",\n        value: dateNaissance,\n        placeholder: \"YYYY-MM-DD\",\n        onChangeText: function onChangeText(text) {\n          return setDateNaissance(text);\n        },\n        style: styles.input\n      })\n    }), _jsx(View, {\n      style: styles.inputContainer,\n      children: _jsx(TextInput, {\n        label: \"Adresse\",\n        value: adresse,\n        onChangeText: function onChangeText(text) {\n          return setAdresse(text);\n        },\n        style: styles.input\n      })\n    }), _jsx(View, {\n      style: styles.inputContainer,\n      children: _jsx(TextInput, {\n        label: \"Numero de Carte\",\n        value: numerocarte,\n        onChangeText: function onChangeText(text) {\n          return setNCarte(text);\n        },\n        style: styles.input\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  logo: {\n    width: 170,\n    height: 80,\n    marginLeft: 'auto',\n    marginRight: 'auto'\n  },\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: 'black'\n  },\n  inputContainer: {\n    borderRadius: 25,\n    backgroundColor: 'transparent',\n    padding: 5,\n    marginBottom: 10\n  },\n  image: {\n    marginTop: -50,\n    marginBottom: 0,\n    width: 280,\n    height: 280,\n    alignSelf: 'center'\n  },\n  input: {\n    backgroundColor: 'transparent',\n    color: 'white',\n    padding: 8,\n    fontSize: 15,\n    fontWeight: '400',\n    borderRadius: 5,\n    marginLeft: 70,\n    marginLeft: 0\n  },\n  button: {\n    backgroundColor: '#b19715',\n    fontWeight: 'bold',\n    padding: 15,\n    borderRadius: 11,\n    marginLeft: '10%',\n    marginTop: 20,\n    width: '80%'\n  }\n});\nexport default Info;","map":{"version":3,"names":["React","useState","View","StyleSheet","Image","TextInput","Button","Colors","DatePicker","ScrollView","jsx","_jsx","jsxs","_jsxs","Info","_useState","_useState2","_slicedToArray","nom","setNom","_useState3","_useState4","prenom","setPrenom","_useState5","_useState6","dateNaissance","setDateNaissance","_useState7","_useState8","adresse","setAdresse","_useState9","_useState10","numerocarte","setNCarte","style","styles","container","children","header","source","require","logo","resizeMode","inputContainer","label","value","onChangeText","text","input","placeholder","create","width","height","marginLeft","marginRight","flex","padding","backgroundColor","borderRadius","marginBottom","image","marginTop","alignSelf","color","fontSize","fontWeight","button"],"sources":["D:/pf/SwiftCardScan/pages/info.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, StyleSheet, Image } from 'react-native';\r\nimport { TextInput, Button, Colors } from 'react-native-paper';\r\nimport DatePicker from 'react-native-datepicker';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\n\r\nconst Info = () => {\r\n  const [nom, setNom] = useState('');\r\n  const [prenom, setPrenom] = useState('');\r\n  const [dateNaissance, setDateNaissance] = useState('');\r\n  const [adresse, setAdresse] = useState('');\r\n  const [numerocarte, setNCarte] = useState('');\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n        <View style={styles.header}>\r\n        <Image\r\n          source={require('../assets/logo2.png')}\r\n          style={styles.logo}\r\n          resizeMode=\"contain\"\r\n        />\r\n      </View>\r\n      <View style={styles.inputContainer}>\r\n        \r\n        <TextInput\r\n          label=\"Nom\"\r\n          value={nom}\r\n          onChangeText={(text) => setNom(text)}\r\n          style={styles.input}\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.inputContainer}>\r\n        <TextInput\r\n          label=\"PrÃ©nom\"\r\n          value={prenom}\r\n          onChangeText={(text) => setPrenom(text)}\r\n          style={styles.input}\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.inputContainer}>\r\n        <TextInput\r\n          label=\"Date de Naissance\"\r\n          value={dateNaissance}\r\n          placeholder=\"YYYY-MM-DD\"\r\n          onChangeText={(text) => setDateNaissance(text)}\r\n          style={styles.input}\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.inputContainer}>\r\n        <TextInput\r\n          label=\"Adresse\"\r\n          value={adresse}\r\n          onChangeText={(text) => setAdresse(text)}\r\n          style={styles.input}\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.inputContainer}>\r\n        <TextInput\r\n          label=\"Numero de Carte\"\r\n          value={numerocarte}\r\n          onChangeText={(text) => setNCarte(text)}\r\n          style={styles.input}\r\n        />\r\n      </View>\r\n\r\n      {/* Add your image component if needed */}\r\n      {/* <Image source={...} style={styles.image} /> */}\r\n\r\n      {/* Add your Button component and handle submit function if needed */}\r\n      {/* <Button mode=\"contained\" onPress={handleSubmit} style={styles.button}>\r\n        Submit\r\n      </Button> */}\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    logo: {\r\n        width: 170, // Adjust the width as needed\r\n        height: 80, // Adjust the height as needed\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n      },\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n    backgroundColor: 'black', // Set the background color to black\r\n  },\r\n  inputContainer: {\r\n    borderRadius: 25,\r\n    backgroundColor: 'transparent',\r\n    padding: 5,\r\n    marginBottom: 10,\r\n  },\r\n  image: {\r\n    marginTop: -50,\r\n    marginBottom: 0,\r\n    width: 280,\r\n    height: 280,\r\n    alignSelf: 'center',\r\n  },\r\n  input: {\r\n    backgroundColor: 'transparent',\r\n    color: 'white', // Set the text color to white\r\n    padding: 8,\r\n    fontSize: 15,\r\n    fontWeight: '400',\r\n    borderRadius: 5,\r\n    marginLeft: 70,\r\n    marginLeft: 0,\r\n  },\r\n  button: {\r\n    backgroundColor: '#b19715',\r\n    fontWeight: 'bold',\r\n    padding: 15,\r\n    borderRadius: 11,\r\n    marginLeft: '10%',\r\n    marginTop: 20,\r\n    width: '80%',\r\n  },\r\n});\r\n\r\nexport default Info;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}