{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { PermissionStatus, createPermissionHook, UnavailabilityError, CodedError } from 'expo-modules-core';\nimport ExponentImagePicker from \"./ExponentImagePicker\";\nfunction validateOptions(options) {\n  var aspect = options.aspect,\n    quality = options.quality,\n    videoMaxDuration = options.videoMaxDuration;\n  if (aspect != null) {\n    var _aspect = _slicedToArray(aspect, 2),\n      x = _aspect[0],\n      y = _aspect[1];\n    if (x <= 0 || y <= 0) {\n      throw new CodedError('ERR_INVALID_ARGUMENT', `Invalid aspect ratio values ${x}:${y}. Provide positive numbers.`);\n    }\n  }\n  if (quality && (quality < 0 || quality > 1)) {\n    throw new CodedError('ERR_INVALID_ARGUMENT', `Invalid 'quality' value ${quality}. Provide a value between 0 and 1.`);\n  }\n  if (videoMaxDuration && videoMaxDuration < 0) {\n    throw new CodedError('ERR_INVALID_ARGUMENT', `Invalid 'videoMaxDuration' value ${videoMaxDuration}. Provide a non-negative number.`);\n  }\n  return options;\n}\nvar DEPRECATED_RESULT_KEYS = ['uri', 'assetId', 'width', 'height', 'type', 'exif', 'base64', 'duration', 'fileName', 'fileSize'];\nfunction mergeDeprecatedResult(result) {\n  var _result$assets;\n  var firstAsset = result == null ? void 0 : (_result$assets = result.assets) == null ? void 0 : _result$assets[0];\n  var deprecatedResult = _objectSpread(_objectSpread({}, result), {}, {\n    get cancelled() {\n      console.warn('Key \"cancelled\" in the image picker result is deprecated and will be removed in SDK 48, use \"canceled\" instead');\n      return this.canceled;\n    }\n  });\n  var _loop = function _loop(key) {\n    Object.defineProperty(deprecatedResult, key, {\n      get: function get() {\n        console.warn(`Key \"${key}\" in the image picker result is deprecated and will be removed in SDK 48, you can access selected assets through the \"assets\" array instead`);\n        return firstAsset == null ? void 0 : firstAsset[key];\n      }\n    });\n  };\n  for (var key of DEPRECATED_RESULT_KEYS) {\n    _loop(key);\n  }\n  return deprecatedResult;\n}\nexport function getCameraPermissionsAsync() {\n  return _getCameraPermissionsAsync.apply(this, arguments);\n}\nfunction _getCameraPermissionsAsync() {\n  _getCameraPermissionsAsync = _asyncToGenerator(function* () {\n    return ExponentImagePicker.getCameraPermissionsAsync();\n  });\n  return _getCameraPermissionsAsync.apply(this, arguments);\n}\nexport function getMediaLibraryPermissionsAsync() {\n  return _getMediaLibraryPermissionsAsync.apply(this, arguments);\n}\nfunction _getMediaLibraryPermissionsAsync() {\n  _getMediaLibraryPermissionsAsync = _asyncToGenerator(function* () {\n    var writeOnly = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    return ExponentImagePicker.getMediaLibraryPermissionsAsync(writeOnly);\n  });\n  return _getMediaLibraryPermissionsAsync.apply(this, arguments);\n}\nexport function requestCameraPermissionsAsync() {\n  return _requestCameraPermissionsAsync.apply(this, arguments);\n}\nfunction _requestCameraPermissionsAsync() {\n  _requestCameraPermissionsAsync = _asyncToGenerator(function* () {\n    return ExponentImagePicker.requestCameraPermissionsAsync();\n  });\n  return _requestCameraPermissionsAsync.apply(this, arguments);\n}\nexport function requestMediaLibraryPermissionsAsync() {\n  return _requestMediaLibraryPermissionsAsync.apply(this, arguments);\n}\nfunction _requestMediaLibraryPermissionsAsync() {\n  _requestMediaLibraryPermissionsAsync = _asyncToGenerator(function* () {\n    var writeOnly = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var imagePickerMethod = ExponentImagePicker.requestMediaLibraryPermissionsAsync;\n    return imagePickerMethod(writeOnly);\n  });\n  return _requestMediaLibraryPermissionsAsync.apply(this, arguments);\n}\nexport var useMediaLibraryPermissions = createPermissionHook({\n  getMethod: function getMethod(options) {\n    return getMediaLibraryPermissionsAsync(options == null ? void 0 : options.writeOnly);\n  },\n  requestMethod: function requestMethod(options) {\n    return requestMediaLibraryPermissionsAsync(options == null ? void 0 : options.writeOnly);\n  }\n});\nexport var useCameraPermissions = createPermissionHook({\n  getMethod: getCameraPermissionsAsync,\n  requestMethod: requestCameraPermissionsAsync\n});\nexport function getPendingResultAsync() {\n  return _getPendingResultAsync.apply(this, arguments);\n}\nfunction _getPendingResultAsync() {\n  _getPendingResultAsync = _asyncToGenerator(function* () {\n    if (ExponentImagePicker.getPendingResultAsync) {\n      return ExponentImagePicker.getPendingResultAsync();\n    }\n    return [];\n  });\n  return _getPendingResultAsync.apply(this, arguments);\n}\nexport function launchCameraAsync() {\n  return _launchCameraAsync.apply(this, arguments);\n}\nfunction _launchCameraAsync() {\n  _launchCameraAsync = _asyncToGenerator(function* () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!ExponentImagePicker.launchCameraAsync) {\n      throw new UnavailabilityError('ImagePicker', 'launchCameraAsync');\n    }\n    var result = yield ExponentImagePicker.launchCameraAsync(validateOptions(options));\n    return mergeDeprecatedResult(result);\n  });\n  return _launchCameraAsync.apply(this, arguments);\n}\nexport function launchImageLibraryAsync(_x) {\n  return _launchImageLibraryAsync.apply(this, arguments);\n}\nfunction _launchImageLibraryAsync() {\n  _launchImageLibraryAsync = _asyncToGenerator(function* (options) {\n    if (!ExponentImagePicker.launchImageLibraryAsync) {\n      throw new UnavailabilityError('ImagePicker', 'launchImageLibraryAsync');\n    }\n    if (options != null && options.allowsEditing && options.allowsMultipleSelection) {\n      console.warn('[expo-image-picker] `allowsEditing` is not supported when `allowsMultipleSelection` is enabled and will be ignored.' + \"Disable either 'allowsEditing' or 'allowsMultipleSelection' in 'launchImageLibraryAsync' \" + 'to fix this warning.');\n    }\n    var result = yield ExponentImagePicker.launchImageLibraryAsync(options != null ? options : {});\n    return mergeDeprecatedResult(result);\n  });\n  return _launchImageLibraryAsync.apply(this, arguments);\n}\nexport * from \"./ImagePicker.types\";\nexport { PermissionStatus };","map":{"version":3,"names":["PermissionStatus","createPermissionHook","UnavailabilityError","CodedError","ExponentImagePicker","validateOptions","options","aspect","quality","videoMaxDuration","_aspect","_slicedToArray","x","y","DEPRECATED_RESULT_KEYS","mergeDeprecatedResult","result","_result$assets","firstAsset","assets","deprecatedResult","_objectSpread","cancelled","console","warn","canceled","_loop","key","Object","defineProperty","get","getCameraPermissionsAsync","_getCameraPermissionsAsync","apply","arguments","_asyncToGenerator","getMediaLibraryPermissionsAsync","_getMediaLibraryPermissionsAsync","writeOnly","length","undefined","requestCameraPermissionsAsync","_requestCameraPermissionsAsync","requestMediaLibraryPermissionsAsync","_requestMediaLibraryPermissionsAsync","imagePickerMethod","useMediaLibraryPermissions","getMethod","requestMethod","useCameraPermissions","getPendingResultAsync","_getPendingResultAsync","launchCameraAsync","_launchCameraAsync","launchImageLibraryAsync","_x","_launchImageLibraryAsync","allowsEditing","allowsMultipleSelection"],"sources":["D:/pf/SwiftCardScan/node_modules/expo-image-picker/build/ImagePicker.js"],"sourcesContent":["import { PermissionStatus, createPermissionHook, UnavailabilityError, CodedError, } from 'expo-modules-core';\nimport ExponentImagePicker from './ExponentImagePicker';\nfunction validateOptions(options) {\n    const { aspect, quality, videoMaxDuration } = options;\n    if (aspect != null) {\n        const [x, y] = aspect;\n        if (x <= 0 || y <= 0) {\n            throw new CodedError('ERR_INVALID_ARGUMENT', `Invalid aspect ratio values ${x}:${y}. Provide positive numbers.`);\n        }\n    }\n    if (quality && (quality < 0 || quality > 1)) {\n        throw new CodedError('ERR_INVALID_ARGUMENT', `Invalid 'quality' value ${quality}. Provide a value between 0 and 1.`);\n    }\n    if (videoMaxDuration && videoMaxDuration < 0) {\n        throw new CodedError('ERR_INVALID_ARGUMENT', `Invalid 'videoMaxDuration' value ${videoMaxDuration}. Provide a non-negative number.`);\n    }\n    return options;\n}\nconst DEPRECATED_RESULT_KEYS = [\n    'uri',\n    'assetId',\n    'width',\n    'height',\n    'type',\n    'exif',\n    'base64',\n    'duration',\n    'fileName',\n    'fileSize',\n];\nfunction mergeDeprecatedResult(result) {\n    const firstAsset = result?.assets?.[0];\n    const deprecatedResult = {\n        ...result,\n        get cancelled() {\n            console.warn('Key \"cancelled\" in the image picker result is deprecated and will be removed in SDK 48, use \"canceled\" instead');\n            return this.canceled;\n        },\n    };\n    for (const key of DEPRECATED_RESULT_KEYS) {\n        Object.defineProperty(deprecatedResult, key, {\n            get() {\n                console.warn(`Key \"${key}\" in the image picker result is deprecated and will be removed in SDK 48, you can access selected assets through the \"assets\" array instead`);\n                return firstAsset?.[key];\n            },\n        });\n    }\n    return deprecatedResult;\n}\n// @needsAudit\n/**\n * Checks user's permissions for accessing camera.\n * @return A promise that fulfills with an object of type [CameraPermissionResponse](#camerapermissionresponse).\n */\nexport async function getCameraPermissionsAsync() {\n    return ExponentImagePicker.getCameraPermissionsAsync();\n}\n// @needsAudit\n/**\n * Checks user's permissions for accessing photos.\n * @param writeOnly Whether to request write or read and write permissions. Defaults to `false`\n * @return A promise that fulfills with an object of type [MediaLibraryPermissionResponse](#medialibrarypermissionresponse).\n */\nexport async function getMediaLibraryPermissionsAsync(writeOnly = false) {\n    return ExponentImagePicker.getMediaLibraryPermissionsAsync(writeOnly);\n}\n// @needsAudit\n/**\n * Asks the user to grant permissions for accessing camera. This does nothing on web because the\n * browser camera is not used.\n * @return A promise that fulfills with an object of type [CameraPermissionResponse](#camerarollpermissionresponse).\n */\nexport async function requestCameraPermissionsAsync() {\n    return ExponentImagePicker.requestCameraPermissionsAsync();\n}\n// @needsAudit\n/**\n * Asks the user to grant permissions for accessing user's photo. This method does nothing on web.\n * @param writeOnly Whether to request write or read and write permissions. Defaults to `false`\n * @return A promise that fulfills with an object of type [MediaLibraryPermissionResponse](#medialibrarypermissionresponse).\n */\nexport async function requestMediaLibraryPermissionsAsync(writeOnly = false) {\n    const imagePickerMethod = ExponentImagePicker.requestMediaLibraryPermissionsAsync;\n    return imagePickerMethod(writeOnly);\n}\n// @needsAudit\n/**\n * Check or request permissions to access the media library.\n * This uses both `requestMediaLibraryPermissionsAsync` and `getMediaLibraryPermissionsAsync` to interact with the permissions.\n *\n * @example\n * ```ts\n * const [status, requestPermission] = ImagePicker.useMediaLibraryPermissions();\n * ```\n */\nexport const useMediaLibraryPermissions = createPermissionHook({\n    // TODO(cedric): permission requesters should have an options param or a different requester\n    getMethod: (options) => getMediaLibraryPermissionsAsync(options?.writeOnly),\n    requestMethod: (options) => requestMediaLibraryPermissionsAsync(options?.writeOnly),\n});\n// @needsAudit\n/**\n * Check or request permissions to access the camera.\n * This uses both `requestCameraPermissionsAsync` and `getCameraPermissionsAsync` to interact with the permissions.\n *\n * @example\n * ```ts\n * const [status, requestPermission] = ImagePicker.useCameraPermissions();\n * ```\n */\nexport const useCameraPermissions = createPermissionHook({\n    getMethod: getCameraPermissionsAsync,\n    requestMethod: requestCameraPermissionsAsync,\n});\n// @needsAudit\n/**\n * Android system sometimes kills the `MainActivity` after the `ImagePicker` finishes. When this\n * happens, we lost the data selected from the `ImagePicker`. However, you can retrieve the lost\n * data by calling `getPendingResultAsync`. You can test this functionality by turning on\n * `Don't keep activities` in the developer options.\n * @return\n * - **On Android:** a promise that resolves to an array of objects of exactly same type as in\n * `ImagePicker.launchImageLibraryAsync` or `ImagePicker.launchCameraAsync` if the `ImagePicker`\n * finished successfully. Otherwise, to the array of [`ImagePickerErrorResult`](#imagepickerimagepickererrorresult).\n * - **On other platforms:** an empty array.\n */\nexport async function getPendingResultAsync() {\n    if (ExponentImagePicker.getPendingResultAsync) {\n        return ExponentImagePicker.getPendingResultAsync();\n    }\n    return [];\n}\n// @needsAudit\n/**\n * Display the system UI for taking a photo with the camera. Requires `Permissions.CAMERA`.\n * On Android and iOS 10 `Permissions.CAMERA_ROLL` is also required. On mobile web, this must be\n * called immediately in a user interaction like a button press, otherwise the browser will block\n * the request without a warning.\n * > **Note:** Make sure that you handle `MainActivity` destruction on **Android**. See [ImagePicker.getPendingResultAsync](#imagepickergetpendingresultasync).\n * > **Notes for Web:** The system UI can only be shown after user activation (e.g. a `Button` press).\n * Therefore, calling `launchCameraAsync` in `componentDidMount`, for example, will **not** work as\n * intended. The `cancelled` event will not be returned in the browser due to platform restrictions\n * and inconsistencies across browsers.\n * @param options An `ImagePickerOptions` object.\n * @return A promise that resolves to an object with `canceled` and `assets` fields.\n * When the user canceled the action the `assets` is always `null`, otherwise it's an array of\n * the selected media assets which have a form of [`ImagePickerAsset`](#imagepickerasset).\n */\nexport async function launchCameraAsync(options = {}) {\n    if (!ExponentImagePicker.launchCameraAsync) {\n        throw new UnavailabilityError('ImagePicker', 'launchCameraAsync');\n    }\n    const result = await ExponentImagePicker.launchCameraAsync(validateOptions(options));\n    return mergeDeprecatedResult(result);\n}\n// @needsAudit\n/**\n * Display the system UI for choosing an image or a video from the phone's library.\n * Requires `Permissions.MEDIA_LIBRARY` on iOS 10 only. On mobile web, this must be     called\n * immediately in a user interaction like a button press, otherwise the browser will block the\n * request without a warning.\n *\n * **Animated GIFs support:** On Android, if the selected image is an animated GIF, the result image will be an\n * animated GIF too if and only if `quality` is explicitly set to `1.0` and `allowsEditing` is set to `false`.\n * Otherwise compression and/or cropper will pick the first frame of the GIF and return it as the\n * result (on Android the result will be a PNG). On iOS, both quality and cropping are supported.\n *\n * > **Notes for Web:** The system UI can only be shown after user activation (e.g. a `Button` press).\n * Therefore, calling `launchImageLibraryAsync` in `componentDidMount`, for example, will **not**\n * work as intended. The `cancelled` event will not be returned in the browser due to platform\n * restrictions and inconsistencies across browsers.\n * @param options An object extended by [`ImagePickerOptions`](#imagepickeroptions).\n * @return A promise that resolves to an object with `canceled` and `assets` fields.\n * When the user canceled the action the `assets` is always `null`, otherwise it's an array of\n * the selected media assets which have a form of [`ImagePickerAsset`](#imagepickerasset).\n */\nexport async function launchImageLibraryAsync(options) {\n    if (!ExponentImagePicker.launchImageLibraryAsync) {\n        throw new UnavailabilityError('ImagePicker', 'launchImageLibraryAsync');\n    }\n    if (options?.allowsEditing && options.allowsMultipleSelection) {\n        console.warn('[expo-image-picker] `allowsEditing` is not supported when `allowsMultipleSelection` is enabled and will be ignored.' +\n            \"Disable either 'allowsEditing' or 'allowsMultipleSelection' in 'launchImageLibraryAsync' \" +\n            'to fix this warning.');\n    }\n    const result = await ExponentImagePicker.launchImageLibraryAsync(options ?? {});\n    return mergeDeprecatedResult(result);\n}\nexport * from './ImagePicker.types';\nexport { PermissionStatus };\n//# sourceMappingURL=ImagePicker.js.map"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}