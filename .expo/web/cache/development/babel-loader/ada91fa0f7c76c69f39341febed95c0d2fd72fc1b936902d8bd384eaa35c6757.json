{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { Platform } from 'expo-modules-core';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ExecutionEnvironment } from \"./Constants.types\";\nvar ID_KEY = 'EXPO_CONSTANTS_INSTALLATION_ID';\nvar _sessionId = uuidv4();\nfunction getBrowserName() {\n  if (Platform.isDOMAvailable) {\n    var agent = navigator.userAgent.toLowerCase();\n    if (agent.includes('edge')) {\n      return 'Edge';\n    } else if (agent.includes('edg')) {\n      return 'Chromium Edge';\n    } else if (agent.includes('opr') && !!window['opr']) {\n      return 'Opera';\n    } else if (agent.includes('chrome') && !!window['chrome']) {\n      return 'Chrome';\n    } else if (agent.includes('trident')) {\n      return 'IE';\n    } else if (agent.includes('firefox')) {\n      return 'Firefox';\n    } else if (agent.includes('safari')) {\n      return 'Safari';\n    }\n  }\n  return undefined;\n}\nexport default {\n  get name() {\n    return 'ExponentConstants';\n  },\n  get appOwnership() {\n    return null;\n  },\n  get executionEnvironment() {\n    return ExecutionEnvironment.Bare;\n  },\n  get installationId() {\n    var installationId;\n    try {\n      installationId = localStorage.getItem(ID_KEY);\n      if (installationId == null || typeof installationId !== 'string') {\n        installationId = uuidv4();\n        localStorage.setItem(ID_KEY, installationId);\n      }\n    } catch (_unused) {\n      installationId = _sessionId;\n    } finally {\n      return installationId;\n    }\n  },\n  get sessionId() {\n    return _sessionId;\n  },\n  get platform() {\n    return {\n      web: Platform.isDOMAvailable ? {\n        ua: navigator.userAgent\n      } : undefined\n    };\n  },\n  get isHeadless() {\n    if (!Platform.isDOMAvailable) return true;\n    return /\\bHeadlessChrome\\//.test(navigator.userAgent);\n  },\n  get isDevice() {\n    return true;\n  },\n  get expoVersion() {\n    return this.manifest.sdkVersion || null;\n  },\n  get linkingUri() {\n    if (Platform.isDOMAvailable) {\n      return location.origin;\n    } else {\n      return '';\n    }\n  },\n  get expoRuntimeVersion() {\n    return this.expoVersion;\n  },\n  get deviceName() {\n    return getBrowserName();\n  },\n  get nativeAppVersion() {\n    return null;\n  },\n  get nativeBuildVersion() {\n    return null;\n  },\n  get systemFonts() {\n    return [];\n  },\n  get statusBarHeight() {\n    return 0;\n  },\n  get deviceYearClass() {\n    return null;\n  },\n  get manifest() {\n    return process.env.APP_MANIFEST || {};\n  },\n  get manifest2() {\n    return null;\n  },\n  get experienceUrl() {\n    if (Platform.isDOMAvailable) {\n      return location.origin;\n    } else {\n      return '';\n    }\n  },\n  get debugMode() {\n    return __DEV__;\n  },\n  getWebViewUserAgentAsync: function () {\n    var _getWebViewUserAgentAsync = _asyncToGenerator(function* () {\n      if (Platform.isDOMAvailable) {\n        return navigator.userAgent;\n      } else {\n        return null;\n      }\n    });\n    function getWebViewUserAgentAsync() {\n      return _getWebViewUserAgentAsync.apply(this, arguments);\n    }\n    return getWebViewUserAgentAsync;\n  }()\n};","map":{"version":3,"names":["Platform","v4","uuidv4","ExecutionEnvironment","ID_KEY","_sessionId","getBrowserName","isDOMAvailable","agent","navigator","userAgent","toLowerCase","includes","window","undefined","name","appOwnership","executionEnvironment","Bare","installationId","localStorage","getItem","setItem","_unused","sessionId","platform","web","ua","isHeadless","test","isDevice","expoVersion","manifest","sdkVersion","linkingUri","location","origin","expoRuntimeVersion","deviceName","nativeAppVersion","nativeBuildVersion","systemFonts","statusBarHeight","deviceYearClass","process","env","APP_MANIFEST","manifest2","experienceUrl","debugMode","__DEV__","getWebViewUserAgentAsync","_getWebViewUserAgentAsync","_asyncToGenerator","apply","arguments"],"sources":["D:/pf/SwiftCardScan/node_modules/expo-constants/build/ExponentConstants.web.js"],"sourcesContent":["import { Platform } from 'expo-modules-core';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ExecutionEnvironment, } from './Constants.types';\nconst ID_KEY = 'EXPO_CONSTANTS_INSTALLATION_ID';\nconst _sessionId = uuidv4();\nfunction getBrowserName() {\n    if (Platform.isDOMAvailable) {\n        const agent = navigator.userAgent.toLowerCase();\n        if (agent.includes('edge')) {\n            return 'Edge';\n        }\n        else if (agent.includes('edg')) {\n            return 'Chromium Edge';\n        }\n        else if (agent.includes('opr') && !!window['opr']) {\n            return 'Opera';\n        }\n        else if (agent.includes('chrome') && !!window['chrome']) {\n            return 'Chrome';\n        }\n        else if (agent.includes('trident')) {\n            return 'IE';\n        }\n        else if (agent.includes('firefox')) {\n            return 'Firefox';\n        }\n        else if (agent.includes('safari')) {\n            return 'Safari';\n        }\n    }\n    return undefined;\n}\nexport default {\n    get name() {\n        return 'ExponentConstants';\n    },\n    get appOwnership() {\n        return null;\n    },\n    get executionEnvironment() {\n        return ExecutionEnvironment.Bare;\n    },\n    get installationId() {\n        let installationId;\n        try {\n            installationId = localStorage.getItem(ID_KEY);\n            if (installationId == null || typeof installationId !== 'string') {\n                installationId = uuidv4();\n                localStorage.setItem(ID_KEY, installationId);\n            }\n        }\n        catch {\n            installationId = _sessionId;\n        }\n        finally {\n            return installationId;\n        }\n    },\n    get sessionId() {\n        return _sessionId;\n    },\n    get platform() {\n        return { web: Platform.isDOMAvailable ? { ua: navigator.userAgent } : undefined };\n    },\n    get isHeadless() {\n        if (!Platform.isDOMAvailable)\n            return true;\n        return /\\bHeadlessChrome\\//.test(navigator.userAgent);\n    },\n    get isDevice() {\n        // TODO: Bacon: Possibly want to add information regarding simulators\n        return true;\n    },\n    get expoVersion() {\n        return this.manifest.sdkVersion || null;\n    },\n    get linkingUri() {\n        if (Platform.isDOMAvailable) {\n            // On native this is `exp://`\n            // On web we should use the protocol and hostname (location.origin)\n            return location.origin;\n        }\n        else {\n            return '';\n        }\n    },\n    get expoRuntimeVersion() {\n        return this.expoVersion;\n    },\n    get deviceName() {\n        return getBrowserName();\n    },\n    get nativeAppVersion() {\n        return null;\n    },\n    get nativeBuildVersion() {\n        return null;\n    },\n    get systemFonts() {\n        // TODO: Bacon: Maybe possible.\n        return [];\n    },\n    get statusBarHeight() {\n        return 0;\n    },\n    get deviceYearClass() {\n        // TODO: Bacon: The android version isn't very accurate either, maybe we could try and guess this value.\n        return null;\n    },\n    get manifest() {\n        // This is defined by @expo/webpack-config.\n        // If your site is bundled with a different config then you may not have access to the app.json automatically.\n        return process.env.APP_MANIFEST || {};\n    },\n    get manifest2() {\n        return null;\n    },\n    get experienceUrl() {\n        if (Platform.isDOMAvailable) {\n            return location.origin;\n        }\n        else {\n            return '';\n        }\n    },\n    get debugMode() {\n        return __DEV__;\n    },\n    async getWebViewUserAgentAsync() {\n        if (Platform.isDOMAvailable) {\n            return navigator.userAgent;\n        }\n        else {\n            return null;\n        }\n    },\n};\n//# sourceMappingURL=ExponentConstants.web.js.map"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}